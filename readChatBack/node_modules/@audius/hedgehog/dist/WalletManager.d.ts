import type { CreateKey, LocalStorage } from "./types";
export declare class WalletManager {
    static createWalletObj(password: string, entropyOverride: string | null | undefined, localStorage: LocalStorage, createKey: CreateKey): Promise<Error | {
        ivHex: string;
        cipherTextHex: string;
        walletObj: import("ethereumjs-wallet").default;
        entropy: string;
    }>;
    static decryptCipherTextAndRetrieveWallet(password: string, ivHex: string, cipherTextHex: string, createKey: CreateKey): Promise<{
        walletObj: import("ethereumjs-wallet").default;
        entropy: string;
    }>;
    static createAuthLookupKey(username: string, password: string, createKey: CreateKey): Promise<string>;
    static getEntropyFromLocalStorage(localStorage: LocalStorage): Promise<string | null>;
    static getWalletObjFromLocalStorageIfExists(localStorage: LocalStorage): Promise<import("ethereumjs-wallet").default | null>;
    static setEntropyInLocalStorage(entropy: string, localStorage: LocalStorage): Promise<void>;
    static deleteEntropyFromLocalStorage(localStorage: LocalStorage): Promise<void>;
}
