/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CoverPhoto } from './CoverPhoto';
import type { PlaylistLibrary } from './PlaylistLibrary';
import type { ProfilePicture } from './ProfilePicture';
/**
 *
 * @export
 * @interface UserFull
 */
export interface UserFull {
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    albumCount: number;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    artistPickTrackId?: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    bio?: string;
    /**
     *
     * @type {CoverPhoto}
     * @memberof UserFull
     */
    coverPhoto?: CoverPhoto;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    followeeCount: number;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    followerCount: number;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    doesFollowCurrentUser?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    handle: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    id: string;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    isVerified: boolean;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    location?: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    name: string;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    playlistCount: number;
    /**
     *
     * @type {ProfilePicture}
     * @memberof UserFull
     */
    profilePicture?: ProfilePicture;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    repostCount: number;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    trackCount: number;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    isDeactivated: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    isAvailable: boolean;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    ercWallet: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    splWallet: string;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    supporterCount: number;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    supportingCount: number;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    totalAudioBalance: number;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    balance: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    associatedWalletsBalance: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    totalBalance: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    waudioBalance: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    associatedSolWalletsBalance: string;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    blocknumber: number;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    wallet: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    createdAt: string;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    isStorageV2: boolean;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    creatorNodeEndpoint?: string;
    /**
     *
     * @type {number}
     * @memberof UserFull
     */
    currentUserFolloweeFollowCount: number;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    doesCurrentUserFollow: boolean;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    handleLc: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    updatedAt: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    coverPhotoSizes?: string;
    /**
     *
     * @type {CoverPhoto}
     * @memberof UserFull
     */
    coverPhotoCids?: CoverPhoto;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    coverPhotoLegacy?: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    profilePictureSizes?: string;
    /**
     *
     * @type {ProfilePicture}
     * @memberof UserFull
     */
    profilePictureCids?: ProfilePicture;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    profilePictureLegacy?: string;
    /**
     *
     * @type {string}
     * @memberof UserFull
     */
    metadataMultihash?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    hasCollectibles: boolean;
    /**
     *
     * @type {PlaylistLibrary}
     * @memberof UserFull
     */
    playlistLibrary?: PlaylistLibrary;
    /**
     *
     * @type {boolean}
     * @memberof UserFull
     */
    allowAiAttribution: boolean;
}
/**
 * Check if a given object implements the UserFull interface.
 */
export declare function instanceOfUserFull(value: object): boolean;
export declare function UserFullFromJSON(json: any): UserFull;
export declare function UserFullFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFull;
export declare function UserFullToJSON(value?: UserFull | null): any;
