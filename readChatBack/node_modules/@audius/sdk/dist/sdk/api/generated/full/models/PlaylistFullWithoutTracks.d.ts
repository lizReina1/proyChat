/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Favorite } from './Favorite';
import type { PlaylistAddedTimestamp } from './PlaylistAddedTimestamp';
import type { PlaylistArtwork } from './PlaylistArtwork';
import type { Repost } from './Repost';
import type { TrackFull } from './TrackFull';
import type { UserFull } from './UserFull';
/**
 *
 * @export
 * @interface PlaylistFullWithoutTracks
 */
export interface PlaylistFullWithoutTracks {
    /**
     *
     * @type {PlaylistArtwork}
     * @memberof PlaylistFullWithoutTracks
     */
    artwork?: PlaylistArtwork;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    permalink?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    id: string;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    isAlbum: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    isImageAutogenerated: boolean;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    playlistName: string;
    /**
     *
     * @type {Array<PlaylistAddedTimestamp>}
     * @memberof PlaylistFullWithoutTracks
     */
    playlistContents: Array<PlaylistAddedTimestamp>;
    /**
     *
     * @type {number}
     * @memberof PlaylistFullWithoutTracks
     */
    repostCount: number;
    /**
     *
     * @type {number}
     * @memberof PlaylistFullWithoutTracks
     */
    favoriteCount: number;
    /**
     *
     * @type {number}
     * @memberof PlaylistFullWithoutTracks
     */
    totalPlayCount: number;
    /**
     *
     * @type {UserFull}
     * @memberof PlaylistFullWithoutTracks
     */
    user: UserFull;
    /**
     *
     * @type {number}
     * @memberof PlaylistFullWithoutTracks
     */
    blocknumber: number;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    createdAt?: string;
    /**
     *
     * @type {Array<Repost>}
     * @memberof PlaylistFullWithoutTracks
     */
    followeeReposts: Array<Repost>;
    /**
     *
     * @type {Array<Favorite>}
     * @memberof PlaylistFullWithoutTracks
     */
    followeeFavorites: Array<Favorite>;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    hasCurrentUserReposted: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    hasCurrentUserSaved: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    isDelete: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PlaylistFullWithoutTracks
     */
    isPrivate: boolean;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    updatedAt?: string;
    /**
     *
     * @type {Array<PlaylistAddedTimestamp>}
     * @memberof PlaylistFullWithoutTracks
     */
    addedTimestamps: Array<PlaylistAddedTimestamp>;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    userId: string;
    /**
     *
     * @type {Array<TrackFull>}
     * @memberof PlaylistFullWithoutTracks
     */
    tracks?: Array<TrackFull>;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    coverArt?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistFullWithoutTracks
     */
    coverArtSizes?: string;
    /**
     *
     * @type {PlaylistArtwork}
     * @memberof PlaylistFullWithoutTracks
     */
    coverArtCids?: PlaylistArtwork;
    /**
     *
     * @type {number}
     * @memberof PlaylistFullWithoutTracks
     */
    trackCount: number;
}
/**
 * Check if a given object implements the PlaylistFullWithoutTracks interface.
 */
export declare function instanceOfPlaylistFullWithoutTracks(value: object): boolean;
export declare function PlaylistFullWithoutTracksFromJSON(json: any): PlaylistFullWithoutTracks;
export declare function PlaylistFullWithoutTracksFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistFullWithoutTracks;
export declare function PlaylistFullWithoutTracksToJSON(value?: PlaylistFullWithoutTracks | null): any;
