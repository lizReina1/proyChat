import type { Configuration } from '../generated/default';
import type { AuthService, EntityManagerService } from '../../services';
import { CreateGrantRequest, RevokeGrantRequest } from './types';
export declare class GrantsApi {
    private readonly entityManager;
    private readonly auth;
    constructor(_config: Configuration, entityManager: EntityManagerService, auth: AuthService);
    /**
     * When user authorizes app to perform actions on their behalf
     */
    createGrant(params: CreateGrantRequest): Promise<Pick<import("web3-core").TransactionReceipt, "blockNumber" | "blockHash">>;
    /**
     * When user revokes an app's authorization to perform actions on their behalf
     */
    revokeGrant(params: RevokeGrantRequest): Promise<Pick<import("web3-core").TransactionReceipt, "blockNumber" | "blockHash">>;
}
