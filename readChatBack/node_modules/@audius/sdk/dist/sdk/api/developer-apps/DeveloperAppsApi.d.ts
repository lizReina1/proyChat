import { Configuration, DeveloperAppsApi as GeneratedDeveloperAppsApi } from '../generated/default';
import type { AuthService, EntityManagerService } from '../../services';
import { AdvancedOptions } from '../../services/EntityManager/types';
import { CreateDeveloperAppRequest, DeleteDeveloperAppRequest } from './types';
export declare class DeveloperAppsApi extends GeneratedDeveloperAppsApi {
    private readonly entityManager;
    private readonly auth;
    private readonly web3;
    constructor(config: Configuration, entityManager: EntityManagerService, auth: AuthService);
    /**
     * Create a developer app
     */
    createDeveloperApp(params: CreateDeveloperAppRequest, advancedOptions?: AdvancedOptions): Promise<{
        apiKey: string;
        apiSecret: string;
        blockNumber: number;
        blockHash: string;
    }>;
    /**
     * Delete a developer app
     */
    deleteDeveloperApp(params: DeleteDeveloperAppRequest): Promise<Pick<import("web3-core").TransactionReceipt, "blockNumber" | "blockHash">>;
}
