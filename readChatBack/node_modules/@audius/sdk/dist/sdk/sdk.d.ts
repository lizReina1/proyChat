import { OAuth } from './oauth';
import { GrantsApi } from './api/grants/GrantsApi';
import { DeveloperAppsApi } from './api/developer-apps/DeveloperAppsApi';
import { AlbumsApi } from './api/albums/AlbumsApi';
import { PlaylistsApi } from './api/playlists/PlaylistsApi';
import { TracksApi } from './api/tracks/TracksApi';
import { UsersApi } from './api/users/UsersApi';
import { ChatsApi } from './api/chats/ChatsApi';
import { TipsApi } from './api/generated/default';
import { PlaylistsApi as PlaylistsApiFull, ReactionsApi as ReactionsApiFull, SearchApi as SearchApiFull, TracksApi as TracksApiFull, UsersApi as UsersApiFull, TipsApi as TipsApiFull, TransactionsApi as TransactionsApiFull } from './api/generated/full';
import { SdkConfig } from './types';
/**
 * The Audius SDK
 */
export declare const sdk: (config: SdkConfig) => {
    tracks: TracksApi;
    users: UsersApi;
    albums: AlbumsApi;
    playlists: PlaylistsApi;
    tips: TipsApi;
    resolve: (params: import("./api/generated/default").ResolveRequest) => Promise<import("./api/generated/default").PlaylistResponse | import("./api/generated/default").TrackResponse | import("./api/generated/default").UserResponse>;
    full: {
        tracks: TracksApiFull;
        users: UsersApiFull;
        search: SearchApiFull;
        playlists: PlaylistsApiFull;
        reactions: ReactionsApiFull;
        tips: TipsApiFull;
        transactions: TransactionsApiFull;
    };
    chats: ChatsApi;
    grants: GrantsApi;
    developerApps: DeveloperAppsApi;
    oauth: OAuth | undefined;
};
export declare type AudiusSdk = ReturnType<typeof sdk>;
