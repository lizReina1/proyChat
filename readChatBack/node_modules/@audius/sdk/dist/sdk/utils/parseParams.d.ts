import type { ZodError, z } from 'zod';
export declare class ParseRequestError extends Error {
    method: string;
    innerError: ZodError;
    name: 'ParseRequestError';
    constructor(method: string, innerError: ZodError);
}
/**
 * @param name Name of the method for which the parameters are being parsed
 * @param schema Zod schema that defines the shape of the request parameters
 * @returns The parsed data or throws an error
 */
export declare const parseParams: <T extends z.ZodType<any, z.ZodTypeDef, any>>(name: string, schema: T) => <J>(params: J) => Promise<z.TypeOf<T>>;
