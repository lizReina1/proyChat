import type { TransactionReceipt } from 'web3-core';
import { Base, BaseConstructorArgs } from './base';
import type { GetUserNotificationsParams } from '../services/discoveryProvider/requests';
declare type AnnouncementData = {};
export declare class Notifications extends Base {
    constructor(...args: BaseConstructorArgs);
    /**
     * Submit a user's view of notification event
     */
    viewNotification({ logger }?: {
        logger: any;
    }): Promise<{
        txReceipt?: TransactionReceipt;
        error?: string;
    }>;
    /**
     * Creates a new notification
     * NOTE: currently only used for announcements and permissioned to a single wallet signer
     */
    createNotification({ logger, data }: {
        logger: any;
        data: AnnouncementData;
    }): Promise<{
        txReceipt?: TransactionReceipt;
        error?: string;
    }>;
    viewPlaylist({ logger, playlistId }: {
        logger: any;
        playlistId: number;
    }): Promise<{
        txReceipt?: TransactionReceipt;
        error?: string;
    }>;
    getNotifications(params: GetUserNotificationsParams): Promise<any>;
}
export {};
