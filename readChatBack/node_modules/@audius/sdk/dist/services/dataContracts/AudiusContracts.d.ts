import type { Logger } from '../../utils';
import { EntityManagerClient } from './EntityManagerClient';
import type { Web3Manager } from '../web3Manager';
import type { ContractClient, GetRegistryAddress } from '../contracts/ContractClient';
export declare class AudiusContracts {
    web3Manager: Web3Manager;
    registryAddress: string;
    entityManagerAddress: string;
    isServer: boolean;
    logger: Logger;
    EntityManagerClient: EntityManagerClient | undefined;
    contractClients: ContractClient[];
    contracts: Record<string, string> | undefined;
    contractAddresses: Record<string, string> | undefined;
    constructor(web3Manager: Web3Manager, registryAddress: string, entityManagerAddress: string, isServer: boolean, logger?: Logger);
    getEmptyRegistryAddress: GetRegistryAddress;
    init(): Promise<void>;
}
