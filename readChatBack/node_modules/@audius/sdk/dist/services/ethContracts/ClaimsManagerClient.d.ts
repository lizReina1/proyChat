/// <reference types="bn.js" />
import { ContractClient } from '../contracts/ContractClient';
import type { EthWeb3Manager } from '../ethWeb3Manager';
export declare class ClaimsManagerClient extends ContractClient {
    web3Manager: EthWeb3Manager;
    getFundingRoundBlockDiff(): Promise<number>;
    getLastFundedBlock(): Promise<number>;
    getFundsPerRound(): Promise<import("bn.js")>;
    getTotalClaimedInRound(): Promise<import("bn.js")>;
    getGovernanceAddress(): Promise<any>;
    getServiceProviderFactoryAddress(): Promise<any>;
    getDelegateManagerAddress(): Promise<any>;
    getStakingAddress(): Promise<any>;
    claimPending(address: string): Promise<any>;
    initiateRound(txRetries?: number): Promise<import("web3-core").TransactionReceipt>;
    getClaimProcessedEvents({ claimer, queryStartBlock }: {
        claimer: string;
        queryStartBlock: number;
    }): Promise<{
        blockNumber: number;
        claimer: any;
        rewards: import("bn.js");
        oldTotal: import("bn.js");
        newTotal: import("bn.js");
    }[]>;
}
