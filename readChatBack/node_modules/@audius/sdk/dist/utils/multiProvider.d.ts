import Web3 from '../LibsWeb3';
import type { HttpProvider, AbstractProvider } from 'web3-core';
import type { JsonRpcPayload } from 'web3-core-helpers';
declare type Providers = [HttpProvider, ...Array<HttpProvider | AbstractProvider>];
/**
 * web3 consumes a provider object on initialization
 * ref: https://github.com/ChainSafe/web3.js/blob/1.x/packages/web3/types/index.d.ts#L31
 * which references: https://github.com/ChainSafe/web3.js/blob/1.x/packages/web3-core/types/index.d.ts#L436
 * MultiProvider implements HttpProvider which can be consumed by web3
 * ref for HttpProvider: https://github.com/ChainSafe/web3.js/blob/1.x/packages/web3-providers-http/types/index.d.ts#L46-L66
 */
export declare class MultiProvider extends Web3.providers.HttpProvider {
    providers: Providers;
    /**
     * Creates a MultiProvider
     * @param {Array<string | Provider> | string} - The providers to use.
     */
    constructor(providers: string[] | string);
    /**
     * @method _send
     * @param {Object} payload
     */
    _send(payload: JsonRpcPayload): Promise<import("web3-core-helpers").JsonRpcResponse | undefined>;
}
export {};
