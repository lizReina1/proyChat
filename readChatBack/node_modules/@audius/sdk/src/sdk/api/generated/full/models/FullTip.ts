/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SupporterReference } from './SupporterReference';
import {
    SupporterReferenceFromJSON,
    SupporterReferenceFromJSONTyped,
    SupporterReferenceToJSON,
} from './SupporterReference';
import type { UserFull } from './UserFull';
import {
    UserFullFromJSON,
    UserFullFromJSONTyped,
    UserFullToJSON,
} from './UserFull';

/**
 * 
 * @export
 * @interface FullTip
 */
export interface FullTip {
    /**
     * 
     * @type {string}
     * @memberof FullTip
     */
    amount: string;
    /**
     * 
     * @type {UserFull}
     * @memberof FullTip
     */
    sender: UserFull;
    /**
     * 
     * @type {UserFull}
     * @memberof FullTip
     */
    receiver: UserFull;
    /**
     * 
     * @type {string}
     * @memberof FullTip
     */
    createdAt: string;
    /**
     * 
     * @type {number}
     * @memberof FullTip
     */
    slot: number;
    /**
     * 
     * @type {Array<SupporterReference>}
     * @memberof FullTip
     */
    followeeSupporters: Array<SupporterReference>;
    /**
     * 
     * @type {string}
     * @memberof FullTip
     */
    txSignature: string;
}

/**
 * Check if a given object implements the FullTip interface.
 */
export function instanceOfFullTip(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "receiver" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "slot" in value;
    isInstance = isInstance && "followeeSupporters" in value;
    isInstance = isInstance && "txSignature" in value;

    return isInstance;
}

export function FullTipFromJSON(json: any): FullTip {
    return FullTipFromJSONTyped(json, false);
}

export function FullTipFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullTip {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'sender': UserFullFromJSON(json['sender']),
        'receiver': UserFullFromJSON(json['receiver']),
        'createdAt': json['created_at'],
        'slot': json['slot'],
        'followeeSupporters': ((json['followee_supporters'] as Array<any>).map(SupporterReferenceFromJSON)),
        'txSignature': json['tx_signature'],
    };
}

export function FullTipToJSON(value?: FullTip | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'sender': UserFullToJSON(value.sender),
        'receiver': UserFullToJSON(value.receiver),
        'created_at': value.createdAt,
        'slot': value.slot,
        'followee_supporters': ((value.followeeSupporters as Array<any>).map(SupporterReferenceToJSON)),
        'tx_signature': value.txSignature,
    };
}

