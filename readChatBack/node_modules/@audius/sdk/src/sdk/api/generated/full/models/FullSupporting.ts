/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserFull } from './UserFull';
import {
    UserFullFromJSON,
    UserFullFromJSONTyped,
    UserFullToJSON,
} from './UserFull';

/**
 * 
 * @export
 * @interface FullSupporting
 */
export interface FullSupporting {
    /**
     * 
     * @type {number}
     * @memberof FullSupporting
     */
    rank: number;
    /**
     * 
     * @type {string}
     * @memberof FullSupporting
     */
    amount: string;
    /**
     * 
     * @type {UserFull}
     * @memberof FullSupporting
     */
    receiver: UserFull;
}

/**
 * Check if a given object implements the FullSupporting interface.
 */
export function instanceOfFullSupporting(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rank" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "receiver" in value;

    return isInstance;
}

export function FullSupportingFromJSON(json: any): FullSupporting {
    return FullSupportingFromJSONTyped(json, false);
}

export function FullSupportingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullSupporting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rank': json['rank'],
        'amount': json['amount'],
        'receiver': UserFullFromJSON(json['receiver']),
    };
}

export function FullSupportingToJSON(value?: FullSupporting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rank': value.rank,
        'amount': value.amount,
        'receiver': UserFullToJSON(value.receiver),
    };
}

